{"ast":null,"code":"var _jsxFileName = \"E:\\\\FYP\\\\Final-Year-Project\\\\Login_App\\\\login_app\\\\src\\\\components\\\\Chat\\\\NewChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewChat = () => {\n  _s();\n  const [recipientId, setRecipientId] = useState('');\n  const [messageText, setMessageText] = useState('');\n  const sendMessage = () => {\n    const token = localStorage.getItem('token'); // Retrieve token from local storage\n\n    // Send a message to the recipient with token included in headers\n    axios.post('/messages', {\n      recipientId,\n      text: messageText\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}` // Include token in authorization header\n      }\n    }).then(response => {\n      console.log('Message sent successfully');\n      // Reset form fields after sending message\n      setRecipientId('');\n      setMessageText('');\n    }).catch(error => {\n      console.error('Error sending message:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"New Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: recipientId,\n      onChange: e => setRecipientId(e.target.value),\n      placeholder: \"Recipient ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: messageText,\n      onChange: e => setMessageText(e.target.value),\n      placeholder: \"Type your message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(NewChat, \"3VQ0rXfpjF+1IHWtTqXgr70BI8M=\");\n_c = NewChat;\nexport default NewChat;\nvar _c;\n$RefreshReg$(_c, \"NewChat\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","NewChat","_s","recipientId","setRecipientId","messageText","setMessageText","sendMessage","token","localStorage","getItem","post","text","headers","Authorization","then","response","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["E:/FYP/Final-Year-Project/Login_App/login_app/src/components/Chat/NewChat.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst NewChat = () => {\r\n    const [recipientId, setRecipientId] = useState('');\r\n    const [messageText, setMessageText] = useState('');\r\n\r\n    const sendMessage = () => {\r\n        const token = localStorage.getItem('token'); // Retrieve token from local storage\r\n\r\n        // Send a message to the recipient with token included in headers\r\n        axios.post('/messages', { recipientId, text: messageText }, {\r\n            headers: {\r\n                Authorization: `Bearer ${token}` // Include token in authorization header\r\n            }\r\n        })\r\n        .then(response => {\r\n            console.log('Message sent successfully');\r\n            // Reset form fields after sending message\r\n            setRecipientId('');\r\n            setMessageText('');\r\n        })\r\n        .catch(error => {\r\n            console.error('Error sending message:', error);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>New Chat</h2>\r\n            <input type=\"text\" value={recipientId} onChange={e => setRecipientId(e.target.value)} placeholder=\"Recipient ID\" />\r\n            <textarea value={messageText} onChange={e => setMessageText(e.target.value)} placeholder=\"Type your message...\" />\r\n            <button onClick={sendMessage}>Send Message</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewChat;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACtB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;;IAE7C;IACAZ,KAAK,CAACa,IAAI,CAAC,WAAW,EAAE;MAAER,WAAW;MAAES,IAAI,EAAEP;IAAY,CAAC,EAAE;MACxDQ,OAAO,EAAE;QACLC,aAAa,EAAG,UAASN,KAAM,EAAC,CAAC;MACrC;IACJ,CAAC,CAAC,CACDO,IAAI,CAACC,QAAQ,IAAI;MACdC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MACxC;MACAd,cAAc,CAAC,EAAE,CAAC;MAClBE,cAAc,CAAC,EAAE,CAAC;IACtB,CAAC,CAAC,CACDa,KAAK,CAACC,KAAK,IAAI;MACZH,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD,CAAC,CAAC;EACN,CAAC;EAED,oBACIpB,OAAA;IAAAqB,QAAA,gBACIrB,OAAA;MAAAqB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBzB,OAAA;MAAO0B,IAAI,EAAC,MAAM;MAACC,KAAK,EAAExB,WAAY;MAACyB,QAAQ,EAAEC,CAAC,IAAIzB,cAAc,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAACI,WAAW,EAAC;IAAc;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnHzB,OAAA;MAAU2B,KAAK,EAAEtB,WAAY;MAACuB,QAAQ,EAAEC,CAAC,IAAIvB,cAAc,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAACI,WAAW,EAAC;IAAsB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClHzB,OAAA;MAAQgC,OAAO,EAAEzB,WAAY;MAAAc,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEd,CAAC;AAACvB,EAAA,CAhCID,OAAO;AAAAgC,EAAA,GAAPhC,OAAO;AAkCb,eAAeA,OAAO;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}