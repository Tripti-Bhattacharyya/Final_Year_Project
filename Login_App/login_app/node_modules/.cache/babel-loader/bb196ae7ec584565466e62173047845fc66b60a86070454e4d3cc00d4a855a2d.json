{"ast":null,"code":"var _jsxFileName = \"E:\\\\FYP\\\\Final-Year-Project\\\\Login_App\\\\login_app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Routes, Route, Navigate, BrowserRouter as Router, withRouter } from 'react-router-dom'; // Import withRouter\nimport Nav from './Nav/Nav';\nimport Homepage from './components/homepage/homepage';\nimport Login from './components/login/login';\nimport Register from './components/register/register';\nimport DocRegister from './components/register/docRegister';\nimport Hospitals from './components/hospitals/Hospitals';\nimport DoctorDashboard from './components/doctors/DoctorDashboard';\nimport DoctorList from './components/doctors/DoctorList';\nimport Booking from './components/booking';\nimport './App.css';\n\n// Define the main App component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App({\n  history\n}) {\n  _s();\n  // Receive history as props\n  // State to manage user authentication\n  const [user, setLoginUser] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  // Effect hook to check authentication status on component mount and location change\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Check if the current route is a protected route\n      const isProtectedRoute = history.location.pathname === '/' || history.location.pathname === '/hospital' || history.location.pathname === '/doctors' || history.location.pathname === '/doctor-dashboard' || history.location.pathname.startsWith('/book-appointment');\n\n      // If it's a protected route, set the dummy user\n      if (isProtectedRoute) {\n        setLoginUser({\n          _id: user._id,\n          isDoctor: user.isDoctor\n        });\n      } else {\n        // If not a protected route, set user to null or an empty object\n        setLoginUser(null); // or setLoginUser({});\n      }\n    } else {\n      // No token found, set user to null or an empty object\n      setLoginUser(null); // or setLoginUser({});\n    }\n\n    // Set loading to false after handling authentication logic\n    setLoading(false);\n  }, [history.location.pathname]); // Include history.location.pathname in dependency array to update on route change\n  const handleLogout = () => {\n    // Clear the token and set user to null\n    localStorage.removeItem('token');\n    setLoginUser(null);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render the main App component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      user: user,\n      setLoginUser: setLoginUser,\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Homepage, {\n          user: user,\n          setLoginUser: setLoginUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          setLoginUser: setLoginUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register/doctor\",\n        element: /*#__PURE__*/_jsxDEV(DocRegister, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/hospital\",\n        element: user && user._id ? /*#__PURE__*/_jsxDEV(Hospitals, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 62\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 79\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/doctors\",\n        element: user && user._id ? /*#__PURE__*/_jsxDEV(DoctorList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 61\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 80\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/doctor-dashboard\",\n        element: user && user._id && user.isDoctor ? /*#__PURE__*/_jsxDEV(DoctorDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 87\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 110\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/book-appointment/:doctorId\",\n        element: user && user._id ? /*#__PURE__*/_jsxDEV(Booking, {\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 80\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 108\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n// Use withRouter to inject history into the component props\n_s(App, \"EnzhAqzybNHCVxSsK1RzMKmVaEU=\");\n_c = App;\nexport default _c2 = withRouter(App);\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","axios","Routes","Route","Navigate","BrowserRouter","Router","withRouter","Nav","Homepage","Login","Register","DocRegister","Hospitals","DoctorDashboard","DoctorList","Booking","jsxDEV","_jsxDEV","App","history","_s","user","setLoginUser","loading","setLoading","token","localStorage","getItem","defaults","headers","common","isProtectedRoute","location","pathname","startsWith","_id","isDoctor","handleLogout","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","className","path","element","to","_c","_c2","$RefreshReg$"],"sources":["E:/FYP/Final-Year-Project/Login_App/login_app/src/App.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Routes, Route, Navigate, BrowserRouter as Router, withRouter } from 'react-router-dom'; // Import withRouter\r\nimport Nav from './Nav/Nav';\r\nimport Homepage from './components/homepage/homepage';\r\nimport Login from './components/login/login';\r\nimport Register from './components/register/register';\r\nimport DocRegister from './components/register/docRegister';\r\nimport Hospitals from './components/hospitals/Hospitals';\r\nimport DoctorDashboard from './components/doctors/DoctorDashboard';\r\nimport DoctorList from './components/doctors/DoctorList';\r\nimport Booking from './components/booking';\r\nimport './App.css';\r\n\r\n// Define the main App component\r\nfunction App({ history }) { // Receive history as props\r\n  // State to manage user authentication\r\n  const [user, setLoginUser] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Effect hook to check authentication status on component mount and location change\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (token) {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n\r\n      // Check if the current route is a protected route\r\n      const isProtectedRoute = history.location.pathname === '/' || history.location.pathname === '/hospital' || history.location.pathname === '/doctors' || history.location.pathname === '/doctor-dashboard' || history.location.pathname.startsWith('/book-appointment');\r\n\r\n      // If it's a protected route, set the dummy user\r\n      if (isProtectedRoute) {\r\n        setLoginUser({ _id: user._id, isDoctor: user.isDoctor });\r\n      } else {\r\n        // If not a protected route, set user to null or an empty object\r\n        setLoginUser(null); // or setLoginUser({});\r\n      }\r\n    } else {\r\n      // No token found, set user to null or an empty object\r\n      setLoginUser(null); // or setLoginUser({});\r\n    }\r\n\r\n    // Set loading to false after handling authentication logic\r\n    setLoading(false);\r\n  }, [history.location.pathname]); // Include history.location.pathname in dependency array to update on route change\r\n  const handleLogout = () => {\r\n    // Clear the token and set user to null\r\n    localStorage.removeItem('token');\r\n    setLoginUser(null);\r\n  };\r\n\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  // Render the main App component\r\n  return (\r\n    <div className=\"App\">\r\n      {/* Navigation component */}\r\n      <Nav user={user} setLoginUser={setLoginUser} handleLogout={handleLogout} />\r\n      \r\n      {/* Define routes for different components */}\r\n      <Routes>\r\n        {/* Homepage route */}\r\n        <Route\r\n          path=\"/\"\r\n          element={<Homepage user={user} setLoginUser={setLoginUser} />}\r\n        />\r\n\r\n        {/* Login route */}\r\n        <Route path=\"/login\" element={<Login setLoginUser={setLoginUser} />} />\r\n        \r\n        {/* Register routes */}\r\n        <Route path=\"/register\" element={<Register />} />\r\n        <Route path=\"/register/doctor\" element={<DocRegister />} />\r\n\r\n        {/* Hospitals route - Protected route, redirect to login if not authenticated */}\r\n        <Route path=\"/hospital\" element={user && user._id ? (<Hospitals/>) : (<Navigate to=\"/login\" />)} />\r\n\r\n        {/* Doctors route - Protected route, redirect to login if not authenticated */}\r\n        <Route path=\"/doctors\" element={user && user._id ? (<DoctorList />) : (<Navigate to=\"/login\" />)} />\r\n        \r\n        {/* Doctor Dashboard route - Protected route, redirect to login if not authenticated */}\r\n        <Route path=\"/doctor-dashboard\" element={user && user._id && user.isDoctor ? (<DoctorDashboard/>) : (<Navigate to=\"/login\" />)} />\r\n\r\n        {/* Book Appointment route - Protected route, redirect to login if not authenticated */}\r\n        <Route path=\"/book-appointment/:doctorId\" element={user && user._id ? (<Booking user={user} />) : (<Navigate to=\"/login\" />)} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Use withRouter to inject history into the component props\r\nexport default withRouter(App);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}