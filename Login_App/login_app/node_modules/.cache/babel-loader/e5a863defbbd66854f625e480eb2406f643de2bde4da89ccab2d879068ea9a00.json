{"ast":null,"code":"var _jsxFileName = \"E:\\\\FYP\\\\Final-Year-Project\\\\Login_App\\\\login_app\\\\src\\\\components\\\\appointments\\\\Appointments.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Appointments = ({\n  user\n}) => {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchAppointments = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get(`http://localhost:9002/appointments/${user._id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const filteredAppointments = response.data.filter(appointment => appointment.status !== 'Cancelled');\n        setAppointments(filteredAppointments);\n      } catch (error) {\n        console.error('Error fetching appointments:', error);\n      }\n    };\n    fetchAppointments();\n  }, [user._id]);\n  const handlePayment = async (doctorId, appointmentId) => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get(`http://localhost:9002/doctors/${doctorId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const razorpayLink = response.data.razorpayLink;\n      if (razorpayLink) {\n        // Open the Razorpay payment link in a new tab\n        window.open(razorpayLink, '_blank');\n      } else {\n        console.error('Razorpay link not found for the doctor');\n        alert('Payment link is not available for this doctor.');\n        return;\n      }\n    } catch (error) {\n      console.error('Error fetching doctor details:', error);\n      alert('An error occurred while fetching doctor details.');\n    }\n  };\n  const handleChat = doctorId => {\n    console.log('Chat button clicked');\n    navigate(`/chat/${doctorId}/${user._id}`);\n  };\n\n  // Function to handle payment callback from Razorpay\n  const handleRazorpayCallback = async data => {\n    try {\n      // Check if token is valid\n      const token = localStorage.getItem('token');\n      if (!token) {\n        console.error('Token not found');\n        return;\n      }\n\n      // Assuming data contains the necessary information from Razorpay callback\n      const {\n        appointmentId,\n        paymentId,\n        status\n      } = data;\n      if (status === 'success') {\n        // Update appointment status to 'Paid' if payment is successful\n        const response = await axios.patch(`http://localhost:9002/appointments/${appointmentId}`, {\n          status: 'Paid',\n          paymentId\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // Update appointment status locally\n        const updatedAppointments = appointments.map(appointment => {\n          if (appointment._id === appointmentId) {\n            return {\n              ...appointment,\n              status: 'Paid'\n            };\n          }\n          return appointment;\n        });\n        setAppointments(updatedAppointments);\n        alert('Appointment payment successful');\n      } else {\n        // Handle payment failure or any other status\n        alert('Appointment payment failed');\n      }\n    } catch (error) {\n      console.error('Error processing Razorpay callback:', error);\n      alert('An error occurred while processing the payment.');\n    }\n  };\n\n  // Assuming we receive the payment callback from Razorpay here\n  useEffect(() => {\n    const data = {\n      appointmentId: 'your_appointment_id',\n      // Placeholder for appointmentId received from Razorpay\n      paymentId: 'dummyPaymentId',\n      // Placeholder for paymentId received from Razorpay\n      status: 'success' // Placeholder for status received from Razorpay\n    };\n\n    handleRazorpayCallback(data); // Call the function to handle the payment callback\n  }, []); // This useEffect hook will run only once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Appointments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: appointments.map(appointment => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Doctor: \", appointment.doctorId.name, \", Date: \", appointment.date, \", Time: \", appointment.timeSlot, \", Status: \", appointment.status, appointment.status === \"Approved\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePayment(appointment.doctorId._id, appointment._id),\n            children: \"Proceed to Payment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 29\n        }, this), appointment.status === \"Paid\" && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleChat(appointment.doctorId._id),\n          children: \"Start Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 29\n        }, this)]\n      }, appointment._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n_s(Appointments, \"Q9s7DPgHP2AKjeaixgbVhDae7S0=\", false, function () {\n  return [useNavigate];\n});\n_c = Appointments;\nexport default Appointments;\nvar _c;\n$RefreshReg$(_c, \"Appointments\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Appointments","user","_s","appointments","setAppointments","navigate","fetchAppointments","token","localStorage","getItem","response","get","_id","headers","Authorization","filteredAppointments","data","filter","appointment","status","error","console","handlePayment","doctorId","appointmentId","razorpayLink","window","open","alert","handleChat","log","handleRazorpayCallback","paymentId","patch","updatedAppointments","map","children","fileName","_jsxFileName","lineNumber","columnNumber","name","date","timeSlot","onClick","_c","$RefreshReg$"],"sources":["E:/FYP/Final-Year-Project/Login_App/login_app/src/components/appointments/Appointments.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Appointments = ({ user }) => {\r\n    const [appointments, setAppointments] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchAppointments = async () => {\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n                const response = await axios.get(`http://localhost:9002/appointments/${user._id}`, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`\r\n                    }\r\n                });\r\n                const filteredAppointments = response.data.filter(appointment => appointment.status !== 'Cancelled');\r\n                setAppointments(filteredAppointments);\r\n            } catch (error) {\r\n                console.error('Error fetching appointments:', error);\r\n            }\r\n        };\r\n\r\n        fetchAppointments();\r\n    }, [user._id]);\r\n\r\n    const handlePayment = async (doctorId, appointmentId) => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await axios.get(`http://localhost:9002/doctors/${doctorId}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            });\r\n\r\n            const razorpayLink = response.data.razorpayLink;\r\n            if (razorpayLink) {\r\n                // Open the Razorpay payment link in a new tab\r\n                window.open(razorpayLink, '_blank');\r\n            } else {\r\n                console.error('Razorpay link not found for the doctor');\r\n                alert('Payment link is not available for this doctor.');\r\n                return;\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching doctor details:', error);\r\n            alert('An error occurred while fetching doctor details.');\r\n        }\r\n    };\r\n\r\n    const handleChat = (doctorId) => {\r\n        console.log('Chat button clicked');\r\n        navigate(`/chat/${doctorId}/${user._id}`);\r\n    };\r\n\r\n    // Function to handle payment callback from Razorpay\r\n    const handleRazorpayCallback = async (data) => {\r\n        try {\r\n            // Check if token is valid\r\n            const token = localStorage.getItem('token');\r\n            if (!token) {\r\n                console.error('Token not found');\r\n                return;\r\n            }\r\n    \r\n            // Assuming data contains the necessary information from Razorpay callback\r\n            const { appointmentId, paymentId, status } = data;\r\n    \r\n            if (status === 'success') {\r\n                // Update appointment status to 'Paid' if payment is successful\r\n                const response = await axios.patch(`http://localhost:9002/appointments/${appointmentId}`, {\r\n                    status: 'Paid',\r\n                    paymentId\r\n                }, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`\r\n                    }\r\n                });\r\n    \r\n                // Update appointment status locally\r\n                const updatedAppointments = appointments.map(appointment => {\r\n                    if (appointment._id === appointmentId) {\r\n                        return { ...appointment, status: 'Paid' };\r\n                    }\r\n                    return appointment;\r\n                });\r\n                setAppointments(updatedAppointments);\r\n                \r\n                alert('Appointment payment successful');\r\n            } else {\r\n                // Handle payment failure or any other status\r\n                alert('Appointment payment failed');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error processing Razorpay callback:', error);\r\n            alert('An error occurred while processing the payment.');\r\n        }\r\n    };\r\n    \r\n\r\n    // Assuming we receive the payment callback from Razorpay here\r\n    useEffect(() => {\r\n        const data = {\r\n            appointmentId: 'your_appointment_id', // Placeholder for appointmentId received from Razorpay\r\n            paymentId: 'dummyPaymentId', // Placeholder for paymentId received from Razorpay\r\n            status: 'success' // Placeholder for status received from Razorpay\r\n        };\r\n        handleRazorpayCallback(data); // Call the function to handle the payment callback\r\n    }, []); // This useEffect hook will run only once when the component mounts\r\n\r\n    return (\r\n        <div>\r\n            <h2>Your Appointments</h2>\r\n            <ul>\r\n                {appointments.map(appointment => (\r\n                    <li key={appointment._id}>\r\n                        Doctor: {appointment.doctorId.name}, Date: {appointment.date}, Time: {appointment.timeSlot}, Status: {appointment.status}\r\n                        {appointment.status === \"Approved\" && (\r\n                            <div>\r\n                                <button onClick={() => handlePayment(appointment.doctorId._id, appointment._id)}>Proceed to Payment</button>\r\n                            </div>\r\n                        )}\r\n                        {appointment.status === \"Paid\" && (\r\n                            <button onClick={() => handleChat(appointment.doctorId._id)}>Start Chat</button>\r\n                        )}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Appointments;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}