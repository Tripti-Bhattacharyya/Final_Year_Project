{"ast":null,"code":"var _jsxFileName = \"E:\\\\FYP\\\\Final-Year-Project\\\\Login_App\\\\login_app\\\\src\\\\components\\\\appointments\\\\Appointments.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Appointments = ({\n  user\n}) => {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchAppointments = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get(`http://localhost:9002/appointments/${user._id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const filteredAppointments = response.data.filter(appointment => appointment.status !== 'Cancelled');\n        setAppointments(filteredAppointments);\n      } catch (error) {\n        console.error('Error fetching appointments:', error);\n      }\n    };\n    fetchAppointments();\n  }, [user._id]);\n  const handlePayment = async (doctorId, appointmentId) => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get(`http://localhost:9002/doctors/${doctorId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const amount = response.data.fees * 100;\n      const razorpayLink = response.data.razorpayLink;\n      if (razorpayLink) {\n        // Directly open Razorpay checkout for payment\n        const options = {\n          key: 'rzp_test_X50Ftg7u2gTNyg',\n          currency: 'INR',\n          name: 'Medicare',\n          description: 'Appointment Payment',\n          amount: amount,\n          prefill: {\n            name: user.name,\n            email: user.email,\n            contact: user.phone\n          },\n          notes: {\n            appointmentId: appointmentId\n          },\n          theme: {\n            color: '#3399cc'\n          },\n          handler: async function (response) {\n            try {\n              // Handle successful payment\n              console.log('Payment successful:', response);\n            } catch (error) {\n              console.error('Error processing payment:', error);\n            }\n          },\n          modal: {\n            ondismiss: async function () {\n              const appointmentUpdateResponse = await axios.put(`http://localhost:9002/appointments/${appointmentId}`, {\n                status: 'Paid'\n              }, {\n                headers: {\n                  Authorization: `Bearer ${token}`\n                }\n              });\n              console.log('Appointment status updated:', appointmentUpdateResponse.data);\n              console.log('Payment modal closed');\n            }\n          },\n          webhook: {\n            url: 'https://40a5-202-8-112-195.ngrok-free.app/webhook',\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            data: {\n              appointmentId: appointmentId\n            }\n          }\n        };\n        const rzp = new window.Razorpay(options);\n        rzp.open();\n      } else {\n        console.error('Razorpay link not found for the doctor');\n        alert('Payment link is not available for this doctor.');\n      }\n    } catch (error) {\n      console.error('Error fetching doctor details:', error);\n      alert('An error occurred while fetching doctor details.');\n    }\n  };\n  const handleChat = doctorId => {\n    console.log('Chat button clicked');\n    navigate(`/chat/${doctorId}/${user._id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Appointments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: appointments.map(appointment => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Doctor: \", appointment.doctorId.name, \", Date: \", appointment.date, \", Time: \", appointment.timeSlot, \", Status: \", appointment.status, appointment.status === \"Approved\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePayment(appointment.doctorId._id, appointment._id),\n            children: \"Proceed to Payment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 29\n        }, this), appointment.status === \"Paid\" && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleChat(appointment.doctorId._id),\n          children: \"Start Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 37\n        }, this)]\n      }, appointment._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n_s(Appointments, \"jwSYxPc0lovypmgrzPC5XoKZTDw=\", false, function () {\n  return [useNavigate];\n});\n_c = Appointments;\nexport default Appointments;\nvar _c;\n$RefreshReg$(_c, \"Appointments\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Appointments","user","_s","appointments","setAppointments","navigate","fetchAppointments","token","localStorage","getItem","response","get","_id","headers","Authorization","filteredAppointments","data","filter","appointment","status","error","console","handlePayment","doctorId","appointmentId","amount","fees","razorpayLink","options","key","currency","name","description","prefill","email","contact","phone","notes","theme","color","handler","log","modal","ondismiss","appointmentUpdateResponse","put","webhook","url","method","rzp","window","Razorpay","open","alert","handleChat","children","fileName","_jsxFileName","lineNumber","columnNumber","map","date","timeSlot","onClick","_c","$RefreshReg$"],"sources":["E:/FYP/Final-Year-Project/Login_App/login_app/src/components/appointments/Appointments.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Appointments = ({ user }) => {\r\n    const [appointments, setAppointments] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchAppointments = async () => {\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n                const response = await axios.get(`http://localhost:9002/appointments/${user._id}`, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`\r\n                    }\r\n                });\r\n                const filteredAppointments = response.data.filter(appointment => appointment.status !== 'Cancelled');\r\n                setAppointments(filteredAppointments);\r\n            } catch (error) {\r\n                console.error('Error fetching appointments:', error);\r\n            }\r\n        };\r\n\r\n        fetchAppointments();\r\n    }, [user._id]);\r\n\r\n    const handlePayment = async (doctorId, appointmentId) => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await axios.get(`http://localhost:9002/doctors/${doctorId}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            });\r\n            const amount=response.data.fees * 100;\r\n\r\n            const razorpayLink = response.data.razorpayLink;\r\n            if (razorpayLink) {\r\n                // Directly open Razorpay checkout for payment\r\n                const options = {\r\n                    key: 'rzp_test_X50Ftg7u2gTNyg',\r\n                    currency: 'INR',\r\n                    name: 'Medicare',\r\n                    description: 'Appointment Payment',\r\n                    amount: amount,\r\n                    prefill: {\r\n                        name: user.name,\r\n                        email: user.email,\r\n                        contact: user.phone,\r\n                    },\r\n                    notes: {\r\n                        appointmentId: appointmentId\r\n                    },\r\n                    theme: {\r\n                        color: '#3399cc'\r\n                    },\r\n                    handler: async function (response) {\r\n                        try {\r\n                            // Handle successful payment\r\n                            console.log('Payment successful:', response);\r\n                            \r\n                        } catch (error) {\r\n                            console.error('Error processing payment:', error);\r\n                        }\r\n                    },\r\n                    modal: {\r\n                        ondismiss: async function () {\r\n                            const appointmentUpdateResponse = await axios.put(`http://localhost:9002/appointments/${appointmentId}`, {\r\n                                status: 'Paid'\r\n                            }, {\r\n                                headers: {\r\n                                    Authorization: `Bearer ${token}`\r\n                                }\r\n                            });\r\n                            console.log('Appointment status updated:', appointmentUpdateResponse.data);\r\n                            console.log('Payment modal closed');\r\n                        }\r\n                    },\r\n                    webhook: {\r\n                        url: 'https://40a5-202-8-112-195.ngrok-free.app/webhook',\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                        data: {\r\n                            appointmentId: appointmentId\r\n                        }\r\n                    }\r\n                };\r\n                const rzp = new window.Razorpay(options);\r\n                rzp.open();\r\n                \r\n                \r\n               \r\n            } else {\r\n                console.error('Razorpay link not found for the doctor');\r\n                alert('Payment link is not available for this doctor.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching doctor details:', error);\r\n            alert('An error occurred while fetching doctor details.');\r\n        }\r\n    };\r\n\r\n    const handleChat = (doctorId) => {\r\n        console.log('Chat button clicked');\r\n        navigate(`/chat/${doctorId}/${user._id}`);\r\n    };\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <h2>Your Appointments</h2>\r\n            <ul>\r\n                {appointments.map(appointment => (\r\n                    <li key={appointment._id}>\r\n                        Doctor: {appointment.doctorId.name}, Date: {appointment.date}, Time: {appointment.timeSlot}, Status: {appointment.status}\r\n                        {appointment.status === \"Approved\" && (\r\n                            <div>\r\n                                <button onClick={() => handlePayment(appointment.doctorId._id, appointment._id)}>Proceed to Payment</button>\r\n                               \r\n\r\n                            </div>\r\n                        )}\r\n                        {appointment.status === \"Paid\" && (\r\n                                    <button onClick={() => handleChat(appointment.doctorId._id)}>Start Chat</button>\r\n\r\n                            )}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Appointments;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}