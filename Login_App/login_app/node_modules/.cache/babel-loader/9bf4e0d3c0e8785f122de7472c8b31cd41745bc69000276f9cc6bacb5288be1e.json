{"ast":null,"code":"var _jsxFileName = \"E:\\\\FYP\\\\Final-Year-Project\\\\Login_App\\\\login_app\\\\src\\\\components\\\\Chat\\\\UserChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport './UserChat.css'; // Import CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserChat = ({\n  currentUserID\n}) => {\n  _s();\n  // Accept currentUserID as prop\n  const {\n    userId\n  } = useParams();\n  const {\n    doctorId\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const socket = io('http://localhost:9002');\n  const messageInputRef = useRef(null);\n  useEffect(() => {\n    socket.emit('getMessages', {\n      userId,\n      doctorId\n    });\n    socket.on('messages', messages => {\n      setMessages(messages);\n    });\n    return () => {\n      socket.off('messages');\n    };\n  }, [doctorId, userId]);\n  const handleMessageSend = () => {\n    if (newMessage.trim() === '') return;\n    socket.emit('sendMessage', {\n      userId,\n      doctorId,\n      content: newMessage\n    });\n    setNewMessage('');\n    // Focus the input field after sending the message\n    messageInputRef.current.focus();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.userId === currentUserID ? 'left' : 'right'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message-content\",\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message-timestamp\",\n          children: message.createdAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        ref: messageInputRef,\n        className: \"message-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleMessageSend,\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(UserChat, \"Zg3egMkuaEZ5ZxYidAApkSakJ0o=\", false, function () {\n  return [useParams, useParams];\n});\n_c = UserChat;\nexport default UserChat;\nvar _c;\n$RefreshReg$(_c, \"UserChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","io","jsxDEV","_jsxDEV","UserChat","currentUserID","_s","userId","doctorId","messages","setMessages","newMessage","setNewMessage","socket","messageInputRef","emit","on","off","handleMessageSend","trim","content","current","focus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","createdAt","type","value","onChange","e","target","ref","onClick","_c","$RefreshReg$"],"sources":["E:/FYP/Final-Year-Project/Login_App/login_app/src/components/Chat/UserChat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport './UserChat.css'; // Import CSS file\r\n\r\nconst UserChat = ({ currentUserID }) => { // Accept currentUserID as prop\r\n    const { userId } = useParams();\r\n    const { doctorId } = useParams();\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const socket = io('http://localhost:9002');\r\n    const messageInputRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        socket.emit('getMessages', { userId, doctorId });\r\n\r\n        socket.on('messages', (messages) => {\r\n            setMessages(messages);\r\n        });\r\n\r\n        return () => {\r\n            socket.off('messages');\r\n        };\r\n    }, [doctorId, userId]);\r\n\r\n    const handleMessageSend = () => {\r\n        if (newMessage.trim() === '') return;\r\n        socket.emit('sendMessage', { userId, doctorId, content: newMessage });\r\n        setNewMessage('');\r\n        // Focus the input field after sending the message\r\n        messageInputRef.current.focus();\r\n    };\r\n\r\n    return (\r\n        <div className=\"user-chat-container\">\r\n            <h2>Chat</h2>\r\n            <div className=\"chat-messages\">\r\n                {messages.map((message, index) => (\r\n                    <div key={index} className={`message ${message.userId === currentUserID ? 'left' : 'right'}`}>\r\n                        <p className=\"message-content\">{message.content}</p>\r\n                        <span className=\"message-timestamp\">{message.createdAt}</span>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"input-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={newMessage}\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    ref={messageInputRef}\r\n                    className=\"message-input\"\r\n                />\r\n                <button onClick={handleMessageSend} className=\"send-button\">Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserChat;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}