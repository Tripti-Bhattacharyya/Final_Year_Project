{"ast":null,"code":"var _jsxFileName = \"E:\\\\FYP\\\\Final-Year-Project\\\\Login_App\\\\login_app\\\\src\\\\components\\\\Chat\\\\DoctorChat.js\",\n  _s = $RefreshSig$();\n// DoctorChat.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorChat = ({\n  user\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const {\n    doctorId\n  } = useParams();\n  useEffect(() => {\n    const socket = io('http://localhost:9002'); // Connect to server\n\n    socket.emit('join', {\n      userId: user._id,\n      doctorId\n    });\n    socket.on('message', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n    return () => {\n      socket.disconnect(); // Disconnect when component unmounts\n    };\n  }, [user._id, doctorId]);\n  const handleMessageSend = () => {\n    if (message.trim()) {\n      const socket = io('http://localhost:9002'); // Connect to server\n      socket.emit('sendMessage', {\n        userId: user._id,\n        doctorId,\n        message\n      });\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat with Doctor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: msg.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), \": \", msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleMessageSend,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorChat, \"ieLzF3Q8KBzZxFrfIr2Vq3MP0Jo=\", false, function () {\n  return [useParams];\n});\n_c = DoctorChat;\nexport default DoctorChat;\nvar _c;\n$RefreshReg$(_c, \"DoctorChat\");","map":{"version":3,"names":["React","useState","useEffect","useParams","io","jsxDEV","_jsxDEV","DoctorChat","user","_s","message","setMessage","messages","setMessages","doctorId","socket","emit","userId","_id","on","prevMessages","disconnect","handleMessageSend","trim","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","text","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["E:/FYP/Final-Year-Project/Login_App/login_app/src/components/Chat/DoctorChat.js"],"sourcesContent":["// DoctorChat.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\n\r\nconst DoctorChat = ({ user }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const { doctorId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const socket = io('http://localhost:9002'); // Connect to server\r\n\r\n    socket.emit('join', { userId: user._id, doctorId });\r\n\r\n    socket.on('message', message => {\r\n      setMessages(prevMessages => [...prevMessages, message]);\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect(); // Disconnect when component unmounts\r\n    };\r\n  }, [user._id, doctorId]);\r\n\r\n  const handleMessageSend = () => {\r\n    if (message.trim()) {\r\n      const socket = io('http://localhost:9002'); // Connect to server\r\n      socket.emit('sendMessage', { userId: user._id, doctorId, message });\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Chat with Doctor</h2>\r\n      <div>\r\n        {messages.map((msg, index) => (\r\n          <div key={index}>\r\n            <strong>{msg.user}</strong>: {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        value={message}\r\n        onChange={e => setMessage(e.target.value)}\r\n      />\r\n      <button onClick={handleMessageSend}>Send</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorChat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}