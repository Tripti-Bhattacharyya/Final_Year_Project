{"ast":null,"code":"var _jsxFileName = \"E:\\\\FYP\\\\Final-Year-Project\\\\Login_App\\\\login_app\\\\src\\\\components\\\\Payment\\\\payNow.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport CheckoutForm from './CheckoutForm';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe('pk_test_51OsfLSSDK53yDPuaMdZw2Vy4TyJGB8Nug8Yc4nvATKi7iOqIvLRli0SIdmkdsQBERIwMO1Ekb6GdW5TYO4pjz72W00Luof9MUU');\nconst Payment = () => {\n  _s();\n  const [amount, setAmount] = useState(0); // Initialize amount state\n  const [clientSecret, setClientSecret] = useState('');\n  const navigate = useNavigate();\n  const handleAmountChange = e => {\n    setAmount(e.target.value); // Update amount state when input value changes\n  };\n\n  const handlePayment = async () => {\n    try {\n      const response = await axios.post('/payment', {\n        amount\n      });\n      setClientSecret(response.data.clientSecret);\n    } catch (error) {\n      console.error('Error fetching client secret:', error);\n    }\n  };\n  const handleSubmitPayment = async () => {\n    // Navigate to a success page or perform other actions after successful payment\n    console.log('Payment submitted');\n    navigate('/payment/success');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: amount,\n          onChange: handleAmountChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), amount > 0 &&\n    /*#__PURE__*/\n    // Render CheckoutForm only if amount is greater than 0\n    _jsxDEV(Elements, {\n      stripe: stripePromise,\n      children: /*#__PURE__*/_jsxDEV(CheckoutForm, {\n        clientSecret: clientSecret,\n        onSubmit: handleSubmitPayment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePayment,\n      children: \"Pay Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Payment, \"79DGPVVAY/DizASh4iAaxqt4xOc=\", false, function () {\n  return [useNavigate];\n});\n_c = Payment;\nexport default Payment;\nvar _c;\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"names":["React","useState","Elements","loadStripe","CheckoutForm","axios","useNavigate","jsxDEV","_jsxDEV","stripePromise","Payment","_s","amount","setAmount","clientSecret","setClientSecret","navigate","handleAmountChange","e","target","value","handlePayment","response","post","data","error","console","handleSubmitPayment","log","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","stripe","onSubmit","onClick","_c","$RefreshReg$"],"sources":["E:/FYP/Final-Year-Project/Login_App/login_app/src/components/Payment/payNow.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Elements } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport CheckoutForm from './CheckoutForm';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst stripePromise = loadStripe('pk_test_51OsfLSSDK53yDPuaMdZw2Vy4TyJGB8Nug8Yc4nvATKi7iOqIvLRli0SIdmkdsQBERIwMO1Ekb6GdW5TYO4pjz72W00Luof9MUU');\r\n\r\nconst Payment = () => {\r\n  const [amount, setAmount] = useState(0); // Initialize amount state\r\n  const [clientSecret, setClientSecret] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleAmountChange = (e) => {\r\n    setAmount(e.target.value); // Update amount state when input value changes\r\n  };\r\n\r\n  const handlePayment = async () => {\r\n    try {\r\n      const response = await axios.post('/payment', { amount });\r\n      setClientSecret(response.data.clientSecret);\r\n    } catch (error) {\r\n      console.error('Error fetching client secret:', error);\r\n    }\r\n  };\r\n\r\n  const handleSubmitPayment = async () => {\r\n    // Navigate to a success page or perform other actions after successful payment\r\n    console.log('Payment submitted');\r\n    navigate('/payment/success');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Payment</h2>\r\n      <div>\r\n        <label>\r\n          Enter Amount:\r\n          <input type=\"number\" value={amount} onChange={handleAmountChange} />\r\n        </label>\r\n      </div>\r\n      {amount > 0 && ( // Render CheckoutForm only if amount is greater than 0\r\n        <Elements stripe={stripePromise}>\r\n          <CheckoutForm clientSecret={clientSecret} onSubmit={handleSubmitPayment} />\r\n        </Elements>\r\n      )}\r\n      <button onClick={handlePayment}>Pay Now</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}