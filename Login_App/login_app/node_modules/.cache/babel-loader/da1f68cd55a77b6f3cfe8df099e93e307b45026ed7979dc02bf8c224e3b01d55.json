{"ast":null,"code":"var _jsxFileName = \"E:\\\\FYP\\\\Final-Year-Project\\\\Login_App\\\\login_app\\\\src\\\\components\\\\booking.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Booking = ({\n  user\n}) => {\n  _s();\n  const {\n    doctorId\n  } = useParams();\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedTimeSlot, setSelectedTimeSlot] = useState('');\n  const [bookingStatus, setBookingStatus] = useState('');\n  const [appointmentId, setAppointmentId] = useState('');\n  const [isBooking, setIsBooking] = useState(false);\n  useEffect(() => {\n    const checkAppointmentStatus = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get(`http://localhost:9002/check-appointment/${doctorId}/${user._id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.status === 200 && response.data) {\n          setBookingStatus('Already Booked');\n          setAppointmentId(response.data._id); // Assuming only one appointment is retrieved\n        } else {\n          setBookingStatus('');\n        }\n      } catch (error) {\n        // Handle 404 error specifically\n        if (error.response && error.response.status === 404) {\n          setBookingStatus('');\n        } else {\n          console.error('Error checking appointment status:', error);\n          setBookingStatus('Error checking appointment status');\n        }\n      }\n    };\n    checkAppointmentStatus();\n  }, [doctorId]);\n  const handleBooking = async () => {\n    if (isBooking) return; // Prevent multiple bookings\n    setIsBooking(true); // Lock the booking process\n\n    try {\n      const token = localStorage.getItem('token');\n      if (bookingStatus === 'Already Booked') {\n        await axios.delete(`http://localhost:9002/cancel-appointment/${appointmentId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setBookingStatus('Appointment Cancelled');\n        setAppointmentId(null);\n      } else {\n        const response = await axios.post(`http://localhost:9002/book-appointment/${doctorId}`, {\n          selectedDate,\n          selectedTimeSlot\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setAppointmentId(response.data.appointmentId);\n        setBookingStatus(response.data.message);\n      }\n    } catch (error) {\n      if (error.response && error.response.status === 400 && error.response.data.message === 'The selected time slot is already booked') {\n        setBookingStatus('The selected time slot is already booked');\n      } else {\n        console.error('Error booking or cancelling appointment:', error);\n        setBookingStatus('Error processing appointment');\n      }\n    } finally {\n      setIsBooking(false); // Release the lock\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"booking-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"booking-title\",\n      children: \"Book Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"booking-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"booking-label\",\n        children: \"Select Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: selectedDate,\n        onChange: e => setSelectedDate(e.target.value),\n        className: \"booking-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"booking-label\",\n        children: \"Select Time Slot:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedTimeSlot,\n        onChange: e => setSelectedTimeSlot(e.target.value),\n        className: \"booking-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"select time\",\n          children: \"Select Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"9:00 AM\",\n          children: \"9:00 AM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"10:00 AM\",\n          children: \"10:00 AM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"11:00 AM\",\n          children: \"11:00 AM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"12:00 AM\",\n          children: \"12:00 AM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBooking,\n        className: \"booking-button\",\n        children: bookingStatus === 'Already Booked' ? 'Cancel' : 'Book'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this), bookingStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"booking-message\",\n        children: bookingStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Booking, \"pTHVEY020QzwUaxWcAs0lwCZMeQ=\", false, function () {\n  return [useParams];\n});\n_c = Booking;\nexport default Booking;\nvar _c;\n$RefreshReg$(_c, \"Booking\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","jsxDEV","_jsxDEV","Booking","user","_s","doctorId","selectedDate","setSelectedDate","selectedTimeSlot","setSelectedTimeSlot","bookingStatus","setBookingStatus","appointmentId","setAppointmentId","isBooking","setIsBooking","checkAppointmentStatus","token","localStorage","getItem","response","get","_id","headers","Authorization","status","data","error","console","handleBooking","delete","post","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["E:/FYP/Final-Year-Project/Login_App/login_app/src/components/booking.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst Booking = ({ user }) => {\r\n  const { doctorId } = useParams();\r\n  const [selectedDate, setSelectedDate] = useState('');\r\n  const [selectedTimeSlot, setSelectedTimeSlot] = useState('');\r\n  const [bookingStatus, setBookingStatus] = useState('');\r\n  const [appointmentId, setAppointmentId] = useState('');\r\n  const [isBooking, setIsBooking] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    const checkAppointmentStatus = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get(`http://localhost:9002/check-appointment/${doctorId}/${user._id}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n\r\n        if (response.status === 200 && response.data) {\r\n          setBookingStatus('Already Booked');\r\n          setAppointmentId(response.data._id); // Assuming only one appointment is retrieved\r\n        } else {\r\n          setBookingStatus('');\r\n        }\r\n      } catch (error) {\r\n        // Handle 404 error specifically\r\n        if (error.response && error.response.status === 404) {\r\n          setBookingStatus('');\r\n        } else {\r\n          console.error('Error checking appointment status:', error);\r\n          setBookingStatus('Error checking appointment status');\r\n        }\r\n      }\r\n    };\r\n\r\n    checkAppointmentStatus();\r\n  }, [doctorId]);\r\n\r\n  const handleBooking = async () => {\r\n    if (isBooking) return; // Prevent multiple bookings\r\n    setIsBooking(true); // Lock the booking process\r\n  \r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (bookingStatus === 'Already Booked') {\r\n        await axios.delete(`http://localhost:9002/cancel-appointment/${appointmentId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n        setBookingStatus('Appointment Cancelled');\r\n        setAppointmentId(null);\r\n      } else {\r\n        const response = await axios.post(`http://localhost:9002/book-appointment/${doctorId}`, {\r\n          selectedDate,\r\n          selectedTimeSlot,\r\n        }, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n        setAppointmentId(response.data.appointmentId);\r\n        setBookingStatus(response.data.message);\r\n      }\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 400 && error.response.data.message === 'The selected time slot is already booked') {\r\n        setBookingStatus('The selected time slot is already booked');\r\n      } else {\r\n        console.error('Error booking or cancelling appointment:', error);\r\n        setBookingStatus('Error processing appointment');\r\n      }\r\n    } finally {\r\n      setIsBooking(false); // Release the lock\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"booking-container\">\r\n    <h2 className=\"booking-title\">Book Appointment</h2>\r\n    <div className=\"booking-form\">\r\n      <label className=\"booking-label\">Select Date:</label>\r\n      <input type=\"date\" value={selectedDate} onChange={(e) => setSelectedDate(e.target.value)} className=\"booking-input\" />\r\n      <label className=\"booking-label\">Select Time Slot:</label>\r\n      <select value={selectedTimeSlot} onChange={(e) => setSelectedTimeSlot(e.target.value)} className=\"booking-input\">\r\n        <option value=\"select time\">Select Time</option>\r\n        <option value=\"9:00 AM\">9:00 AM</option>\r\n        <option value=\"10:00 AM\">10:00 AM</option>\r\n        <option value=\"11:00 AM\">11:00 AM</option>\r\n        <option value=\"12:00 AM\">12:00 AM</option>\r\n      </select>\r\n      <button onClick={handleBooking} className=\"booking-button\">\r\n        {bookingStatus === 'Already Booked' ? 'Cancel' : 'Book'}\r\n      </button>\r\n      {bookingStatus && <p className=\"booking-message\">{bookingStatus}</p>}\r\n    </div>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Booking;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}