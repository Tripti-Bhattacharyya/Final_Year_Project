{"ast":null,"code":"var _jsxFileName = \"E:\\\\FYP\\\\Final-Year-Project\\\\Login_App\\\\login_app\\\\src\\\\components\\\\register\\\\docRegister.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocRegister = () => {\n  _s();\n  const navigate = useNavigate();\n  const [doctor, setDoctor] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    specialization: \"\",\n    degree: \"\",\n    photo: null,\n    // New state for storing the uploaded photo\n    timeslots: {\n      monday: {\n        start: \"\",\n        end: \"\"\n      }\n    }\n  });\n\n  // Handle changes in input fields\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setDoctor(prevDoctor => ({\n      ...prevDoctor,\n      [name]: value\n    }));\n  };\n\n  // Handle changes in the photo input field\n  const handlePhotoChange = e => {\n    const file = e.target.files[0];\n    setDoctor(prevDoctor => ({\n      ...prevDoctor,\n      photo: file\n    }));\n  };\n\n  // Function to register a new doctor\n  const registerDoctor = async () => {\n    // Create a new FormData object to send data including the photo\n    const formData = new FormData();\n    formData.append(\"name\", doctor.name);\n    formData.append(\"email\", doctor.email);\n    formData.append(\"password\", doctor.password);\n    formData.append(\"specialization\", doctor.specialization);\n    formData.append(\"degree\", doctor.degree);\n    formData.append(\"photo\", doctor.photo); // Append photo to FormData\n\n    try {\n      // Send a POST request to register the doctor\n      const response = await axios.post(\"http://localhost:9002/register/doctor\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\" // Set content type to multipart/form-data for file upload\n        }\n      });\n\n      // Display a success message and navigate to the login page upon successful registration\n      alert(response.data.message);\n      navigate(\"/login\");\n    } catch (error) {\n      // Handle registration error\n      console.error(\"Doctor registration error:\", error);\n      alert(\"An error occurred during registration\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"doc-register\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Doctor Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: doctor.name,\n      placeholder: \"Your Name\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      value: doctor.email,\n      placeholder: \"Your Email\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: doctor.password,\n      placeholder: \"Your Password\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"specialization\",\n      value: doctor.specialization,\n      placeholder: \"Your Specialization\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"degree\",\n      value: doctor.degree,\n      placeholder: \"Your Degree\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handlePhotoChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      onClick: registerDoctor,\n      children: \"Register as Doctor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(DocRegister, \"E5DnAcXcPOyyvsROqh/+5yeades=\", false, function () {\n  return [useNavigate];\n});\n_c = DocRegister;\nexport default DocRegister;\nvar _c;\n$RefreshReg$(_c, \"DocRegister\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","DocRegister","_s","navigate","doctor","setDoctor","name","email","password","specialization","degree","photo","timeslots","monday","start","end","handleChange","e","value","target","prevDoctor","handlePhotoChange","file","files","registerDoctor","formData","FormData","append","response","post","headers","alert","data","message","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","accept","onClick","_c","$RefreshReg$"],"sources":["E:/FYP/Final-Year-Project/Login_App/login_app/src/components/register/docRegister.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst DocRegister = () => {\r\n  const navigate = useNavigate();\r\n  const [doctor, setDoctor] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    specialization: \"\",\r\n    degree: \"\",\r\n    photo: null, // New state for storing the uploaded photo\r\n    timeslots: {\r\n      monday: { start: \"\", end: \"\" },\r\n    },\r\n  });\r\n\r\n  // Handle changes in input fields\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setDoctor((prevDoctor) => ({\r\n      ...prevDoctor,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  // Handle changes in the photo input field\r\n  const handlePhotoChange = (e) => {\r\n    const file = e.target.files[0];\r\n    setDoctor((prevDoctor) => ({\r\n      ...prevDoctor,\r\n      photo: file,\r\n    }));\r\n  };\r\n\r\n  // Function to register a new doctor\r\n  const registerDoctor = async () => {\r\n    // Create a new FormData object to send data including the photo\r\n    const formData = new FormData();\r\n    formData.append(\"name\", doctor.name);\r\n    formData.append(\"email\", doctor.email);\r\n    formData.append(\"password\", doctor.password);\r\n    formData.append(\"specialization\", doctor.specialization);\r\n    formData.append(\"degree\", doctor.degree);\r\n    formData.append(\"photo\", doctor.photo); // Append photo to FormData\r\n\r\n    try {\r\n      // Send a POST request to register the doctor\r\n      const response = await axios.post(\"http://localhost:9002/register/doctor\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\", // Set content type to multipart/form-data for file upload\r\n        },\r\n      });\r\n      \r\n      // Display a success message and navigate to the login page upon successful registration\r\n      alert(response.data.message);\r\n      navigate(\"/login\");\r\n    } catch (error) {\r\n      // Handle registration error\r\n      console.error(\"Doctor registration error:\", error);\r\n      alert(\"An error occurred during registration\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"doc-register\">\r\n      <h1>Doctor Registration</h1>\r\n      {/* Input fields for doctor information */}\r\n      <input type=\"text\" name=\"name\" value={doctor.name} placeholder=\"Your Name\" onChange={handleChange} />\r\n      <input type=\"text\" name=\"email\" value={doctor.email} placeholder=\"Your Email\" onChange={handleChange} />\r\n      <input type=\"password\" name=\"password\" value={doctor.password} placeholder=\"Your Password\" onChange={handleChange} />\r\n      <input type=\"text\" name=\"specialization\" value={doctor.specialization} placeholder=\"Your Specialization\" onChange={handleChange} />\r\n      <input type=\"text\" name=\"degree\" value={doctor.degree} placeholder=\"Your Degree\" onChange={handleChange} />\r\n\r\n      {/* Input field for uploading photo */}\r\n      <input type=\"file\" accept=\"image/*\" onChange={handlePhotoChange} />\r\n\r\n      {/* Button to register the doctor */}\r\n      <div className=\"button\" onClick={registerDoctor}>\r\n        Register as Doctor\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DocRegister;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}