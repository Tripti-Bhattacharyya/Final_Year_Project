{"ast":null,"code":"var _jsxFileName = \"E:\\\\FYP\\\\Final-Year-Project\\\\Login_App\\\\login_app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\n// Import necessary libraries and components\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Routes, Route, Navigate, BrowserRouter as Router, useLocation } from 'react-router-dom';\nimport Nav from './Nav/Nav';\nimport Homepage from './components/homepage/homepage';\nimport Login from './components/login/login';\nimport Register from './components/register/register';\nimport Hospitals from './components/hospitals/Hospitals';\nimport Doctors from './components/doctors/Doctors';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const location = useLocation(); // Correctly used inside the <Router>\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const updateUser = async () => {\n      if (token) {\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n        // Check if the current route is a protected route\n        const isProtectedRoute = location.pathname === '/' || location.pathname === '/hospital' || location.pathname === '/doctors';\n\n        // If it's a protected route, set the isAuthenticated state\n        if (isProtectedRoute) {\n          setIsAuthenticated(true);\n        } else {\n          // If not a protected route, set isAuthenticated to false\n          setIsAuthenticated(false);\n        }\n      } else {\n        // No token found, set isAuthenticated to false\n        setIsAuthenticated(false);\n      }\n    };\n    updateUser();\n\n    // Set loading to false after handling authentication logic\n    setLoading(false);\n  }, [location.pathname, setIsAuthenticated]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      isAuthenticated: isAuthenticated,\n      setIsAuthenticated: setIsAuthenticated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Homepage, {\n          setIsAuthenticated: setIsAuthenticated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          setIsAuthenticated: setIsAuthenticated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/hospital\",\n        element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Hospitals, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 62\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 78\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/doctors\",\n        element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Doctors, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 61\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 75\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SPpZwmh9h1luugO0EbMpZxf4Dq8=\", false, function () {\n  return [useLocation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Routes","Route","Navigate","BrowserRouter","Router","useLocation","Nav","Homepage","Login","Register","Hospitals","Doctors","jsxDEV","_jsxDEV","App","_s","loading","setLoading","isAuthenticated","setIsAuthenticated","location","token","localStorage","getItem","updateUser","defaults","headers","common","isProtectedRoute","pathname","children","fileName","_jsxFileName","lineNumber","columnNumber","className","path","element","to","_c","$RefreshReg$"],"sources":["E:/FYP/Final-Year-Project/Login_App/login_app/src/App.js"],"sourcesContent":["// App.js\r\n// Import necessary libraries and components\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Routes, Route, Navigate, BrowserRouter as Router, useLocation } from 'react-router-dom';\r\nimport Nav from './Nav/Nav';\r\nimport Homepage from './components/homepage/homepage';\r\nimport Login from './components/login/login';\r\nimport Register from './components/register/register';\r\nimport Hospitals from './components/hospitals/Hospitals';\r\nimport Doctors from './components/doctors/Doctors';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const location = useLocation(); // Correctly used inside the <Router>\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n  \r\n    const updateUser = async () => {\r\n      if (token) {\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n  \r\n        // Check if the current route is a protected route\r\n        const isProtectedRoute = location.pathname === '/' || location.pathname === '/hospital' || location.pathname === '/doctors';\r\n  \r\n        // If it's a protected route, set the isAuthenticated state\r\n        if (isProtectedRoute) {\r\n          setIsAuthenticated(true);\r\n        } else {\r\n          // If not a protected route, set isAuthenticated to false\r\n          setIsAuthenticated(false);\r\n        }\r\n      } else {\r\n        // No token found, set isAuthenticated to false\r\n        setIsAuthenticated(false);\r\n      }\r\n    };\r\n  \r\n    updateUser();\r\n  \r\n    // Set loading to false after handling authentication logic\r\n    setLoading(false);\r\n  }, [location.pathname, setIsAuthenticated]);\r\n  \r\n\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      \r\n        <Nav isAuthenticated={isAuthenticated} setIsAuthenticated={setIsAuthenticated} />\r\n\r\n        <Routes>\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              isAuthenticated ? (\r\n                <Homepage setIsAuthenticated={setIsAuthenticated} />\r\n              ) : (\r\n                <Navigate to=\"/login\" />\r\n              )\r\n            }\r\n          />\r\n          <Route path=\"/login\" element={<Login setIsAuthenticated={setIsAuthenticated} />} />\r\n          <Route path=\"/register\" element={<Register />} />\r\n          <Route path=\"/hospital\" element={isAuthenticated ? <Hospitals /> : <Navigate to=\"/login\" />} />\r\n          <Route path=\"/doctors\" element={isAuthenticated ? <Doctors /> : <Navigate to=\"/login\" />} />\r\n        </Routes>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}