{"ast":null,"code":"var _jsxFileName = \"E:\\\\FYP\\\\Final-Year-Project\\\\Login_App\\\\login_app\\\\src\\\\components\\\\Chat\\\\UserChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport './UserChat.css'; // Import CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserChat = user => {\n  _s();\n  console.log(user.user);\n  const {\n    userId,\n    doctorId\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [file, setFile] = useState(null);\n  const socket = useRef(null); // Store socket instance in a ref\n\n  const messageInputRef = useRef(null);\n  useEffect(() => {\n    // Initialize socket connection only once\n    socket.current = io('http://localhost:9002', {\n      query: {\n        userId: user.user\n      }\n    });\n\n    // Retrieve initial messages\n    socket.current.emit('getMessages', {\n      userId,\n      doctorId\n    });\n\n    // Listen for new messages and handle them\n    socket.current.on('message', message => {\n      console.log(\"Received message:\", message);\n\n      // Handle the message based on its type (text or file)\n      if (message.fileName && message.fileData) {\n        // Handle file message\n        const fileUrl = URL.createObjectURL(new Blob([message.fileData.data]));\n        console.log(\"Received file message:\", message.fileName, fileUrl);\n\n        // Render the file message (create a download link)\n        const downloadLink = document.createElement('a');\n        downloadLink.href = fileUrl;\n        downloadLink.download = message.fileName;\n        downloadLink.textContent = `Download ${message.fileName}`;\n\n        // Append the download link to the chat interface\n        const chatWindow = document.getElementById('chat-window');\n        chatWindow.appendChild(downloadLink);\n      } else {\n        // Handle text message\n        console.log(\"Received text message:\", message.content);\n        // Render the text message in the chat interface\n        // For example:\n        // chatWindow.appendChild(document.createTextNode(message.content));\n      }\n\n      // Append the new message to the list\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n\n    // Clean up event listeners\n    return () => {\n      if (socket.current) {\n        socket.current.off('message');\n      }\n    };\n  }, [doctorId, user.user]);\n  const handleMessageSend = () => {\n    if (newMessage.trim() === '' && !file) return;\n    const message = {\n      userId: userId,\n      doctorId: doctorId,\n      content: newMessage.trim() !== '' ? newMessage : null,\n      file: file ? {\n        name: file.name,\n        data: file // Assuming file is already a Blob or File object\n      } : null\n    };\n    socket.current.emit('sendMessage', message);\n    setNewMessage('');\n    setFile(null);\n    messageInputRef.current.focus();\n  };\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat-window\",\n      className: \"chat-messages\",\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.senderId === user.user ? 'left' : 'right'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message-content\",\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message-timestamp\",\n          children: message.createdAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)]\n      }, message._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        ref: messageInputRef,\n        className: \"message-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleMessageSend,\n        className: \"send-button\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_s(UserChat, \"MiPIWFLwwVYMHGQx0l4ilIqgMu8=\", false, function () {\n  return [useParams];\n});\n_c = UserChat;\nexport default UserChat;\nvar _c;\n$RefreshReg$(_c, \"UserChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","io","jsxDEV","_jsxDEV","UserChat","user","_s","console","log","userId","doctorId","messages","setMessages","newMessage","setNewMessage","file","setFile","socket","messageInputRef","current","query","emit","on","message","fileName","fileData","fileUrl","URL","createObjectURL","Blob","data","downloadLink","document","createElement","href","download","textContent","chatWindow","getElementById","appendChild","content","prevMessages","off","handleMessageSend","trim","name","focus","handleFileChange","e","selectedFile","target","files","className","children","_jsxFileName","lineNumber","columnNumber","id","map","senderId","createdAt","_id","type","value","onChange","ref","onClick","_c","$RefreshReg$"],"sources":["E:/FYP/Final-Year-Project/Login_App/login_app/src/components/Chat/UserChat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport './UserChat.css'; // Import CSS file\r\n\r\nconst UserChat = (user) => {\r\n    console.log(user.user);\r\n    const { userId, doctorId } = useParams();\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const [file, setFile] = useState(null);\r\n    const socket = useRef(null); // Store socket instance in a ref\r\n\r\n    const messageInputRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        // Initialize socket connection only once\r\n        socket.current = io('http://localhost:9002', {\r\n            query: {\r\n                userId: user.user,\r\n            }\r\n        });\r\n    \r\n        // Retrieve initial messages\r\n        socket.current.emit('getMessages', { userId, doctorId });\r\n    \r\n        // Listen for new messages and handle them\r\n        socket.current.on('message', (message) => {\r\n            console.log(\"Received message:\", message);\r\n\r\n            // Handle the message based on its type (text or file)\r\n            if (message.fileName && message.fileData) {\r\n                // Handle file message\r\n                const fileUrl = URL.createObjectURL(new Blob([message.fileData.data]));\r\n                console.log(\"Received file message:\", message.fileName, fileUrl);\r\n\r\n                // Render the file message (create a download link)\r\n                const downloadLink = document.createElement('a');\r\n                downloadLink.href = fileUrl;\r\n                downloadLink.download = message.fileName;\r\n                downloadLink.textContent = `Download ${message.fileName}`;\r\n\r\n                // Append the download link to the chat interface\r\n                const chatWindow = document.getElementById('chat-window');\r\n                chatWindow.appendChild(downloadLink);\r\n            } else {\r\n                // Handle text message\r\n                console.log(\"Received text message:\", message.content);\r\n                // Render the text message in the chat interface\r\n                // For example:\r\n                // chatWindow.appendChild(document.createTextNode(message.content));\r\n            }\r\n\r\n            // Append the new message to the list\r\n            setMessages(prevMessages => [...prevMessages, message]);\r\n        });\r\n    \r\n        // Clean up event listeners\r\n        return () => {\r\n            if (socket.current) {\r\n                socket.current.off('message');\r\n            }\r\n        };\r\n    }, [doctorId, user.user]);\r\n    \r\n    const handleMessageSend = () => {\r\n        if (newMessage.trim() === '' && !file) return;\r\n    \r\n        const message = {\r\n            userId: userId,\r\n            doctorId: doctorId,\r\n            content: newMessage.trim() !== '' ? newMessage : null,\r\n            file: file ? {\r\n                name: file.name,\r\n                data: file // Assuming file is already a Blob or File object\r\n            } : null\r\n        };\r\n    \r\n        socket.current.emit('sendMessage', message);\r\n    \r\n        setNewMessage('');\r\n        setFile(null);\r\n        messageInputRef.current.focus();\r\n    };\r\n    \r\n    const handleFileChange = (e) => {\r\n        const selectedFile = e.target.files[0];\r\n        setFile(selectedFile);\r\n    };\r\n\r\n    return (\r\n        <div className=\"user-chat-container\">\r\n            <h2>Chat</h2>\r\n            <div id=\"chat-window\" className=\"chat-messages\">\r\n                {messages.map((message) => (\r\n                    <div key={message._id} className={`message ${message.senderId === user.user ? 'left' : 'right'}`}>\r\n                        <p className=\"message-content\">{message.content}</p>\r\n                        <span className=\"message-timestamp\">{message.createdAt}</span>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"input-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={newMessage}\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    ref={messageInputRef}\r\n                    className=\"message-input\"\r\n                />\r\n                <input type=\"file\" onChange={handleFileChange} />\r\n                <button onClick={handleMessageSend} className=\"send-button\">Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserChat;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}