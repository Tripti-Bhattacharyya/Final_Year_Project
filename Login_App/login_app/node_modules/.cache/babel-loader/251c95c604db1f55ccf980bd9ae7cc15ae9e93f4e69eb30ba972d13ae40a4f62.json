{"ast":null,"code":"var _jsxFileName = \"E:\\\\FYP\\\\Final-Year-Project\\\\Login_App\\\\login_app\\\\src\\\\components\\\\register\\\\register.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./register.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // State to manage user registration data\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    reEnterPassword: \"\",\n    isDoctor: false\n  });\n\n  // State to manage redirection to doctor registration\n  const [redirectToDoctorRegistration, setRedirectToDoctorRegistration] = useState(false);\n\n  // Function to handle input change\n  const handleUserChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser({\n      ...user,\n      [name]: value\n    });\n  };\n\n  // Function to handle registration\n  const register = () => {\n    const {\n      name,\n      email,\n      password,\n      reEnterPassword\n    } = user;\n    if (name && email && password && password === reEnterPassword) {\n      axios.post(\"http://localhost:9002/register\", user).then(res => {\n        alert(res.data.message);\n        navigate(\"/login\");\n      }).catch(error => {\n        console.error(\"Registration error:\", error);\n        alert(\"An error occurred during registration\");\n      });\n    } else {\n      alert(\"Invalid input\");\n    }\n  };\n\n  // Effect hook to handle redirection to doctor registration\n  useEffect(() => {\n    if (redirectToDoctorRegistration) {\n      navigate(\"/register/doctor\");\n    }\n  }, [redirectToDoctorRegistration, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: user.name,\n      placeholder: \"Your Name\",\n      onChange: handleUserChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      value: user.email,\n      placeholder: \"Your Email\",\n      onChange: handleUserChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: user.password,\n      placeholder: \"Your Password\",\n      onChange: handleUserChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"reEnterPassword\",\n      value: user.reEnterPassword,\n      placeholder: \"Re-enter Password\",\n      onChange: handleUserChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Register as Doctor:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"isDoctor\",\n        checked: user.isDoctor,\n        onChange: e => {\n          setUser({\n            ...user,\n            isDoctor: e.target.checked\n          });\n          if (e.target.checked) {\n            setRedirectToDoctorRegistration(true);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      onClick: register,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"or\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      onClick: () => navigate(\"/login\"),\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"j+rya8W4/VvBTpUTAlSwxS1IznY=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","Register","_s","navigate","user","setUser","name","email","password","reEnterPassword","isDoctor","redirectToDoctorRegistration","setRedirectToDoctorRegistration","handleUserChange","e","value","target","register","post","then","res","alert","data","message","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","checked","onClick","_c","$RefreshReg$"],"sources":["E:/FYP/Final-Year-Project/Login_App/login_app/src/components/register/register.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./register.css\";\r\nimport axios from \"axios\";\r\n\r\nconst Register = () => {\r\n  const navigate = useNavigate();\r\n  \r\n  // State to manage user registration data\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    reEnterPassword: \"\",\r\n    isDoctor: false,\r\n  });\r\n\r\n  // State to manage redirection to doctor registration\r\n  const [redirectToDoctorRegistration, setRedirectToDoctorRegistration] = useState(false);\r\n\r\n  // Function to handle input change\r\n  const handleUserChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser({\r\n      ...user,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // Function to handle registration\r\n  const register = () => {\r\n    const { name, email, password, reEnterPassword } = user\r\n    if (name && email && password && (password === reEnterPassword)) {\r\n      axios.post(\"http://localhost:9002/register\", user)\r\n        .then( res => {\r\n          alert(res.data.message)\r\n          navigate(\"/login\")\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Registration error:\", error);\r\n          alert(\"An error occurred during registration\");\r\n        });\r\n    } else {\r\n      alert(\"Invalid input\");\r\n    }\r\n  };\r\n\r\n  // Effect hook to handle redirection to doctor registration\r\n  useEffect(() => {\r\n    if (redirectToDoctorRegistration) {\r\n      navigate(\"/register/doctor\");\r\n    }\r\n  }, [redirectToDoctorRegistration, navigate]);\r\n\r\n  return (\r\n    <div className=\"register\">\r\n      <h1>Register</h1>\r\n      {/* Input fields for user registration */}\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={user.name}\r\n        placeholder=\"Your Name\"\r\n        onChange={handleUserChange}\r\n      />\r\n      \r\n      <input\r\n        type=\"text\"\r\n      name=\"email\"\r\n      value={user.email}\r\n        placeholder=\"Your Email\"\r\n     onChange={handleUserChange}\r\n       />\r\n         <input\r\n        type=\"password\"\r\n         name=\"password\"\r\n       value={user.password}\r\n       placeholder=\"Your Password\"\r\n       onChange={handleUserChange}\r\n/>\r\n<input\r\ntype=\"password\"\r\nname=\"reEnterPassword\"\r\nvalue={user.reEnterPassword}\r\nplaceholder=\"Re-enter Password\"\r\nonChange={handleUserChange}\r\n/>\r\n      \r\n      <label>\r\n        Register as Doctor:\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"isDoctor\"\r\n          checked={user.isDoctor}\r\n          onChange={(e) => {\r\n            setUser({ ...user, isDoctor: e.target.checked });\r\n            if (e.target.checked) {\r\n              setRedirectToDoctorRegistration(true);\r\n            }\r\n          }}\r\n        />\r\n      </label>\r\n\r\n      <div className=\"button\" onClick={register}>\r\n        Register\r\n      </div>\r\n      <div>or</div>\r\n      <div className=\"button\" onClick={() => navigate(\"/login\")}>\r\n        Login\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}