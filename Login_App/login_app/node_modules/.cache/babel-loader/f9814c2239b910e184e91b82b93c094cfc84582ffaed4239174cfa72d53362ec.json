{"ast":null,"code":"var _jsxFileName = \"E:\\\\FYP\\\\Final-Year-Project\\\\Login_App\\\\login_app\\\\src\\\\components\\\\Chat\\\\UserChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport './UserChat.css'; // Import CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserChat = user => {\n  _s();\n  console.log(user.user);\n  const {\n    userId,\n    doctorId\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [file, setFile] = useState(null);\n  const socket = useRef(null); // Store socket instance in a ref\n\n  const messageInputRef = useRef(null);\n  useEffect(() => {\n    // Initialize socket connection only once\n    socket.current = io('http://localhost:9002', {\n      query: {\n        userId: user.user\n      }\n    });\n\n    // Retrieve initial messages\n    socket.current.emit('getMessages', {\n      userId,\n      doctorId\n    });\n\n    // Listen for new messages\n    socket.current.on('messages', initialMessages => {\n      setMessages(initialMessages);\n    });\n\n    // Log when setting up the event listener for incoming messages\n    console.log(\"Setting up event listener for incoming messages\");\n\n    // Listen for incoming messages\n    socket.current.on('message', message => {\n      console.log(\"Received message:\", message);\n      setMessages(prevMessages => [...prevMessages, message]); // Append the new message to the list\n    });\n\n    // Clean up event listeners\n    return () => {\n      if (socket.current) {\n        socket.current.off('messages');\n        socket.current.off('message');\n      }\n    };\n  }, [doctorId, user.user]);\n  const handleMessageSend = () => {\n    if (newMessage.trim() === '' && !file) return;\n    const message = {\n      userId: userId,\n      doctorId: doctorId,\n      content: newMessage.trim() !== '' ? newMessage : null,\n      file: file ? {\n        name: file.name,\n        contentType: file.type,\n        data: file // Assuming file is already a Blob or File object\n      } : null\n    };\n    socket.current.emit('sendMessage', message);\n    setNewMessage('');\n    setFile(null);\n    messageInputRef.current.focus();\n  };\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      setFile(selectedFile);\n    }\n  };\n  const formatTimestamp = timestamp => {\n    const date = new Date(timestamp);\n    const formattedDate = `${date.getDate().toString().padStart(2, '0')}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getFullYear()}`;\n    const hours = date.getHours();\n    const minutes = date.getMinutes().toString().padStart(2, '0');\n    const ampm = hours >= 12 ? 'PM' : 'AM';\n    const formattedTime = `${hours % 12 || 12}:${minutes} ${ampm}`;\n    return `${formattedDate} ${formattedTime}`;\n  };\n  const handleFileDownload = async (messageId, fileName) => {\n    try {\n      // Fetch the file data from the backend\n      const response = await fetch(`http://localhost:9002/files/${messageId}`);\n\n      // Check if the response is successful\n      if (!response.ok) {\n        throw new Error('Failed to download file');\n      }\n\n      // Convert the file data to a Blob object\n      const fileBlob = await response.blob();\n\n      // Create a temporary URL for the file blob\n      const fileUrl = URL.createObjectURL(fileBlob);\n\n      // Create a link element to trigger the file download\n      const link = document.createElement('a');\n      link.href = fileUrl;\n      link.download = fileName;\n\n      // Trigger the click event to start the download\n      link.click();\n\n      // Clean up by revoking the object URL\n      URL.revokeObjectURL(fileUrl);\n    } catch (error) {\n      console.error('Error downloading file:', error);\n      // Handle error appropriately (e.g., show error message to user)\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.senderId === user.user ? 'left' : 'right'}`,\n        children: [message.fileName && message.fileData ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: message.contentType.startsWith('image') ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:${message.contentType};base64,${message.fileData}`,\n              alt: message.fileName,\n              style: {\n                maxWidth: '30%',\n                maxHeight: '50%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: message.fileName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleFileDownload(message._id, message.fileName),\n              children: \"Download\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"message-content\",\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message-timestamp\",\n          children: formatTimestamp(message.createdAt)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this)]\n      }, message._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        ref: messageInputRef,\n        className: \"message-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"input-group-append \",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"input-group-text send-icon \",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"bi bi-send \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 71\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n};\n_s(UserChat, \"MiPIWFLwwVYMHGQx0l4ilIqgMu8=\", false, function () {\n  return [useParams];\n});\n_c = UserChat;\nexport default UserChat;\nvar _c;\n$RefreshReg$(_c, \"UserChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","io","jsxDEV","_jsxDEV","UserChat","user","_s","console","log","userId","doctorId","messages","setMessages","newMessage","setNewMessage","file","setFile","socket","messageInputRef","current","query","emit","on","initialMessages","message","prevMessages","off","handleMessageSend","trim","content","name","contentType","type","data","focus","handleFileChange","e","selectedFile","target","files","formatTimestamp","timestamp","date","Date","formattedDate","getDate","toString","padStart","getMonth","getFullYear","hours","getHours","minutes","getMinutes","ampm","formattedTime","handleFileDownload","messageId","fileName","response","fetch","ok","Error","fileBlob","blob","fileUrl","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","error","className","children","_jsxFileName","lineNumber","columnNumber","map","senderId","fileData","startsWith","src","alt","style","maxWidth","maxHeight","onClick","_id","createdAt","value","onChange","ref","class","_c","$RefreshReg$"],"sources":["E:/FYP/Final-Year-Project/Login_App/login_app/src/components/Chat/UserChat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport './UserChat.css'; // Import CSS file\r\n\r\nconst UserChat = (user) => {\r\n    console.log(user.user);\r\n    const { userId, doctorId } = useParams();\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const [file, setFile] = useState(null);\r\n    const socket = useRef(null); // Store socket instance in a ref\r\n\r\n    const messageInputRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        // Initialize socket connection only once\r\n        socket.current = io('http://localhost:9002', {\r\n            query: {\r\n                userId: user.user,\r\n            }\r\n        });\r\n    \r\n        // Retrieve initial messages\r\n        socket.current.emit('getMessages', { userId, doctorId });\r\n    \r\n        // Listen for new messages\r\n        socket.current.on('messages', (initialMessages) => {\r\n            setMessages(initialMessages);\r\n        });\r\n    \r\n        // Log when setting up the event listener for incoming messages\r\n        console.log(\"Setting up event listener for incoming messages\");\r\n    \r\n        // Listen for incoming messages\r\n        socket.current.on('message', (message) => {\r\n            console.log(\"Received message:\", message);\r\n            setMessages(prevMessages => [...prevMessages, message]); // Append the new message to the list\r\n        });\r\n    \r\n        // Clean up event listeners\r\n        return () => {\r\n            if (socket.current) {\r\n                socket.current.off('messages');\r\n                socket.current.off('message');\r\n            }\r\n        };\r\n    }, [doctorId, user.user]);\r\n    \r\n    const handleMessageSend = () => {\r\n        if (newMessage.trim() === '' && !file) return;\r\n    \r\n        const message = {\r\n            userId: userId,\r\n            doctorId: doctorId,\r\n            content: newMessage.trim() !== '' ? newMessage : null,\r\n            file: file ? {\r\n                name: file.name,\r\n                contentType: file.type,\r\n                data: file // Assuming file is already a Blob or File object\r\n            } : null\r\n        };\r\n    \r\n        socket.current.emit('sendMessage', message);\r\n    \r\n        setNewMessage('');\r\n        setFile(null);\r\n        messageInputRef.current.focus();\r\n    };\r\n    \r\n    const handleFileChange = (e) => {\r\n        const selectedFile = e.target.files[0];\r\n        if (selectedFile) {\r\n            setFile(selectedFile);\r\n        }\r\n    };\r\n\r\n    const formatTimestamp = (timestamp) => {\r\n        const date = new Date(timestamp);\r\n        const formattedDate = `${date.getDate().toString().padStart(2, '0')}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getFullYear()}`;\r\n        const hours = date.getHours();\r\n        const minutes = date.getMinutes().toString().padStart(2, '0');\r\n        const ampm = hours >= 12 ? 'PM' : 'AM';\r\n        const formattedTime = `${hours % 12 || 12}:${minutes} ${ampm}`;\r\n        return `${formattedDate} ${formattedTime}`;\r\n    };\r\n\r\n    const handleFileDownload = async (messageId, fileName) => {\r\n        try {\r\n            // Fetch the file data from the backend\r\n            const response = await fetch(`http://localhost:9002/files/${messageId}`);\r\n            \r\n            // Check if the response is successful\r\n            if (!response.ok) {\r\n                throw new Error('Failed to download file');\r\n            }\r\n            \r\n            // Convert the file data to a Blob object\r\n            const fileBlob = await response.blob();\r\n            \r\n            // Create a temporary URL for the file blob\r\n            const fileUrl = URL.createObjectURL(fileBlob);\r\n            \r\n            // Create a link element to trigger the file download\r\n            const link = document.createElement('a');\r\n            link.href = fileUrl;\r\n            link.download = fileName;\r\n            \r\n            // Trigger the click event to start the download\r\n            link.click();\r\n            \r\n            // Clean up by revoking the object URL\r\n            URL.revokeObjectURL(fileUrl);\r\n        } catch (error) {\r\n            console.error('Error downloading file:', error);\r\n            // Handle error appropriately (e.g., show error message to user)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"user-chat-container\">\r\n            <h2>Chat</h2>\r\n            <div className=\"chat-messages\">\r\n                {messages.map((message) => (\r\n                    <div key={message._id} className={`message ${message.senderId === user.user ? 'left' : 'right'}`}>\r\n                        {message.fileName && message.fileData ? (\r\n                            <div>\r\n                                {message.contentType.startsWith('image') ? (\r\n                                    <div>\r\n                                       \r\n                                        <img src={`data:${message.contentType};base64,${message.fileData}`} alt={message.fileName} style={{ maxWidth: '30%', maxHeight: '50%' }} />\r\n                                    </div>\r\n                                ) : (\r\n                                    <div>\r\n                                        <p>{message.fileName}</p>\r\n                                        <button onClick={() => handleFileDownload(message._id, message.fileName)}>Download</button>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        ) : (\r\n                            <div>\r\n                                <p className=\"message-content\">{message.content}</p>\r\n                            </div>\r\n                        )}\r\n                        <span className=\"message-timestamp\">{formatTimestamp(message.createdAt)}</span>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            \r\n            <div className=\"input-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={newMessage}\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    ref={messageInputRef}\r\n                    className=\"message-input\"\r\n                />\r\n                <input type=\"file\" onChange={handleFileChange} />\r\n                <div class=\"input-group-append \">\r\n                            <span class=\"input-group-text send-icon \"><i class=\"bi bi-send \"></i>\r\n                            </span>\r\n                 </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserChat;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}