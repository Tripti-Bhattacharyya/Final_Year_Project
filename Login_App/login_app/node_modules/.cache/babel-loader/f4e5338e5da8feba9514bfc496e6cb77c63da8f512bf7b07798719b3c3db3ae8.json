{"ast":null,"code":"var _jsxFileName = \"E:\\\\FYP\\\\Final-Year-Project\\\\Login_App\\\\login_app\\\\src\\\\App.js\";\n// App.js\n// Import necessary libraries and components\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport Nav from './Nav/Nav';\nimport Homepage from './components/homepage/homepage';\nimport Login from './components/login/login';\nimport Register from './components/register/register';\nimport Hospitals from './components/hospitals/Hospitals';\nimport Doctors from './components/doctors/Doctors';\nimport './App.css';\n\n// Define the main App component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    // State to manage user authentication\n    this.checkAuthentication = () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n        // Check if the current route is a protected route\n        const isProtectedRoute = this.props.location.pathname === '/' || this.props.location.pathname === '/hospital' || this.props.location.pathname === '/doctors';\n\n        // If it's a protected route, set the dummy user\n        if (isProtectedRoute) {\n          this.setState({\n            user: {\n              _id: 'someUserId'\n            }\n          });\n        } else {\n          // If not a protected route, set user to null or an empty object\n          this.setState({\n            user: null\n          }); // or this.setState({ user: {} });\n        }\n      } else {\n        // No token found, set user to null or an empty object\n        this.setState({\n          user: null\n        }); // or this.setState({ user: {} });\n      }\n\n      // Set loading to false after handling authentication logic\n      this.setState({\n        loading: false\n      });\n    };\n    this.state = {\n      user: {},\n      loading: true\n    };\n  }\n  componentDidMount() {\n    this.checkAuthentication();\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      this.checkAuthentication();\n    }\n  }\n  render() {\n    const {\n      user,\n      loading\n    } = this.state;\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 14\n      }, this);\n    }\n\n    // Render the main App component\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {\n        user: user,\n        setLoginUser: this.setLoginUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Homepage, {\n            user: user,\n            setLoginUser: this.setLoginUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            setLoginUser: this.setLoginUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/hospital\",\n          element: user && user._id ? /*#__PURE__*/_jsxDEV(Hospitals, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 66\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 83\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/doctors\",\n          element: user && user._id ? /*#__PURE__*/_jsxDEV(Doctors, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 65\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 80\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","axios","Routes","Route","Navigate","Nav","Homepage","Login","Register","Hospitals","Doctors","jsxDEV","_jsxDEV","App","constructor","props","checkAuthentication","token","localStorage","getItem","defaults","headers","common","isProtectedRoute","location","pathname","setState","user","_id","loading","state","componentDidMount","componentDidUpdate","prevProps","render","children","fileName","_jsxFileName","lineNumber","columnNumber","className","setLoginUser","path","element","to"],"sources":["E:/FYP/Final-Year-Project/Login_App/login_app/src/App.js"],"sourcesContent":["// App.js\r\n// Import necessary libraries and components\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Routes, Route, Navigate } from 'react-router-dom';\r\nimport Nav from './Nav/Nav';\r\nimport Homepage from './components/homepage/homepage';\r\nimport Login from './components/login/login';\r\nimport Register from './components/register/register';\r\nimport Hospitals from './components/hospitals/Hospitals';\r\nimport Doctors from './components/doctors/Doctors';\r\nimport './App.css';\r\n\r\n// Define the main App component\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // State to manage user authentication\r\n    this.state = {\r\n      user: {},\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.checkAuthentication();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location.pathname !== prevProps.location.pathname) {\r\n      this.checkAuthentication();\r\n    }\r\n  }\r\n\r\n  checkAuthentication = () => {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (token) {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      // Check if the current route is a protected route\r\n      const isProtectedRoute = this.props.location.pathname === '/' || this.props.location.pathname === '/hospital' || this.props.location.pathname === '/doctors';\r\n\r\n      // If it's a protected route, set the dummy user\r\n      if (isProtectedRoute) {\r\n        this.setState({ user: { _id: 'someUserId' } });\r\n      } else {\r\n        // If not a protected route, set user to null or an empty object\r\n        this.setState({ user: null }); // or this.setState({ user: {} });\r\n      }\r\n    } else {\r\n      // No token found, set user to null or an empty object\r\n      this.setState({ user: null }); // or this.setState({ user: {} });\r\n    }\r\n\r\n    // Set loading to false after handling authentication logic\r\n    this.setState({ loading: false });\r\n  }\r\n\r\n  render() {\r\n    const { user, loading } = this.state;\r\n\r\n    if (loading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n\r\n    // Render the main App component\r\n    return (\r\n      <div className=\"App\">\r\n      \r\n          {/* Navigation component */}\r\n          <Nav user={user} setLoginUser={this.setLoginUser} />\r\n\r\n          {/* Define routes for different components */}\r\n          <Routes>\r\n            {/* Homepage route */}\r\n            <Route\r\n              path=\"/\"\r\n              element={<Homepage user={user} setLoginUser={this.setLoginUser} />}\r\n            />\r\n\r\n            {/* Login route */}\r\n            <Route path=\"/login\" element={<Login setLoginUser={this.setLoginUser} />} />\r\n\r\n            {/* Register route */}\r\n            <Route path=\"/register\" element={<Register />} />\r\n\r\n            {/* Hospitals route - Protected route, redirect to login if not authenticated */}\r\n            <Route path=\"/hospital\" element={user && user._id ? (<Hospitals/>) : (<Navigate to=\"/login\" />)} />\r\n\r\n            {/* Doctors route - Protected route, redirect to login if not authenticated */}\r\n            <Route path=\"/doctors\" element={user && user._id ? (<Doctors/>) : (<Navigate to=\"/login\" />)} />\r\n          </Routes>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}