{"ast":null,"code":"var _jsxFileName = \"E:\\\\FYP\\\\Final-Year-Project\\\\Login_App\\\\login_app\\\\src\\\\components\\\\Chat\\\\chat.js\",\n  _s = $RefreshSig$();\n// Chat.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const {\n    doctorId\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  useEffect(() => {\n    // Fetch chat messages for the specified doctorId\n    // You can implement this functionality according to your backend setup\n    fetchChatMessages();\n  }, [doctorId]);\n  const fetchChatMessages = async () => {\n    try {\n      const response = await axios.get(`http://localhost:9002/chat/${doctorId}`);\n      setMessages(response.data.messages);\n    } catch (error) {\n      console.error('Error fetching chat messages:', error);\n    }\n  };\n  const sendMessage = async () => {\n    try {\n      await axios.post(`http://localhost:9002/chat/${doctorId}`, {\n        message: newMessage\n      });\n      // After sending message successfully, fetch updated messages\n      fetchChatMessages();\n      setNewMessage(''); // Clear the input field\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Chat with Doctor \", doctorId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sender\",\n          children: message.sender\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"content\",\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"TJmBsR/I/SIk+bWtIQ6KCTFy23Q=\", false, function () {\n  return [useParams];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","Chat","_s","doctorId","messages","setMessages","newMessage","setNewMessage","fetchChatMessages","response","get","data","error","console","sendMessage","post","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","index","sender","content","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["E:/FYP/Final-Year-Project/Login_App/login_app/src/components/Chat/chat.js"],"sourcesContent":["// Chat.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Chat = () => {\r\n  const { doctorId } = useParams();\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch chat messages for the specified doctorId\r\n    // You can implement this functionality according to your backend setup\r\n    fetchChatMessages();\r\n  }, [doctorId]);\r\n\r\n  const fetchChatMessages = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:9002/chat/${doctorId}`);\r\n      setMessages(response.data.messages);\r\n    } catch (error) {\r\n      console.error('Error fetching chat messages:', error);\r\n    }\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    try {\r\n      await axios.post(`http://localhost:9002/chat/${doctorId}`, { message: newMessage });\r\n      // After sending message successfully, fetch updated messages\r\n      fetchChatMessages();\r\n      setNewMessage(''); // Clear the input field\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Chat with Doctor {doctorId}</h1>\r\n      <div className=\"chat-messages\">\r\n        {messages.map((message, index) => (\r\n          <div key={index} className=\"message\">\r\n            <span className=\"sender\">{message.sender}</span>\r\n            <span className=\"content\">{message.content}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"chat-input\">\r\n        <input type=\"text\" value={newMessage} onChange={(e) => setNewMessage(e.target.value)} />\r\n        <button onClick={sendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}