{"ast":null,"code":"var _jsxFileName = \"E:\\\\FYP\\\\Final-Year-Project\\\\Login_App\\\\login_app\\\\src\\\\components\\\\appointments\\\\Appointments.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Appointments = ({\n  user\n}) => {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchAppointments = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get(`http://localhost:9002/appointments/${user._id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const filteredAppointments = response.data.filter(appointment => appointment.status !== 'Cancelled');\n        setAppointments(filteredAppointments);\n      } catch (error) {\n        console.error('Error fetching appointments:', error);\n      }\n    };\n    fetchAppointments();\n  }, [user._id]);\n  const handlePayment = async (doctorId, appointmentId) => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get(`http://localhost:9002/doctors/${doctorId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const amount = response.data.fees * 100;\n\n      // Directly open Razorpay checkout for payment\n      const options = {\n        key: 'rzp_test_X50Ftg7u2gTNyg',\n        currency: 'INR',\n        name: 'Medicare',\n        description: 'Appointment Payment',\n        amount: amount,\n        prefill: {\n          name: user.name,\n          email: user.email,\n          contact: user.phone\n        },\n        notes: {\n          appointmentId: appointmentId\n        },\n        theme: {\n          color: '#3399cc'\n        },\n        handler: async function (response) {\n          try {\n            // Handle successful payment\n            console.log('Payment successful:', response);\n            window.location.reload();\n          } catch (error) {\n            console.error('Error processing payment:', error);\n          }\n        },\n        modal: {\n          ondismiss: function () {\n            console.log('Payment modal closed');\n          }\n        },\n        webhook: {\n          url: 'https://1e8b-202-8-112-195.ngrok-free.app/webhook',\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          data: {\n            appointmentId: appointmentId\n          }\n        }\n      };\n      const rzp = new window.Razorpay(options);\n      rzp.open();\n    } catch (error) {\n      console.error('Error fetching doctor details:', error);\n      alert('An error occurred while fetching doctor details.');\n    }\n  };\n  const handleChat = doctorId => {\n    console.log('Chat button clicked');\n    navigate(`/chat/${doctorId}/${user._id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Appointments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: appointments.map(appointment => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Doctor: \", appointment.doctorId.name, \", Date: \", appointment.date, \", Time: \", appointment.timeSlot, \", Status: \", appointment.status, appointment.status === \"Approved\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePayment(appointment.doctorId._id, appointment._id),\n            children: \"Proceed to Payment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }, this), appointment.status === \"Paid\" && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleChat(appointment.doctorId._id),\n          children: \"Start Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 37\n        }, this)]\n      }, appointment._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n_s(Appointments, \"jwSYxPc0lovypmgrzPC5XoKZTDw=\", false, function () {\n  return [useNavigate];\n});\n_c = Appointments;\nexport default Appointments;\nvar _c;\n$RefreshReg$(_c, \"Appointments\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Appointments","user","_s","appointments","setAppointments","navigate","fetchAppointments","token","localStorage","getItem","response","get","_id","headers","Authorization","filteredAppointments","data","filter","appointment","status","error","console","handlePayment","doctorId","appointmentId","amount","fees","options","key","currency","name","description","prefill","email","contact","phone","notes","theme","color","handler","log","window","location","reload","modal","ondismiss","webhook","url","method","rzp","Razorpay","open","alert","handleChat","children","fileName","_jsxFileName","lineNumber","columnNumber","map","date","timeSlot","onClick","_c","$RefreshReg$"],"sources":["E:/FYP/Final-Year-Project/Login_App/login_app/src/components/appointments/Appointments.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Appointments = ({ user }) => {\r\n    const [appointments, setAppointments] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchAppointments = async () => {\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n                const response = await axios.get(`http://localhost:9002/appointments/${user._id}`, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`\r\n                    }\r\n                });\r\n                const filteredAppointments = response.data.filter(appointment => appointment.status !== 'Cancelled');\r\n                setAppointments(filteredAppointments);\r\n            } catch (error) {\r\n                console.error('Error fetching appointments:', error);\r\n            }\r\n        };\r\n\r\n        fetchAppointments();\r\n    }, [user._id]);\r\n\r\n    const handlePayment = async (doctorId, appointmentId) => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await axios.get(`http://localhost:9002/doctors/${doctorId}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            });\r\n            const amount=response.data.fees * 100;\r\n\r\n            \r\n           \r\n                // Directly open Razorpay checkout for payment\r\n                const options = {\r\n                    key: 'rzp_test_X50Ftg7u2gTNyg',\r\n                    currency: 'INR',\r\n                    name: 'Medicare',\r\n                    description: 'Appointment Payment',\r\n                    amount: amount,\r\n                    prefill: {\r\n                        name: user.name,\r\n                        email: user.email,\r\n                        contact: user.phone,\r\n                    },\r\n                    notes: {\r\n                        appointmentId: appointmentId\r\n                    },\r\n                    theme: {\r\n                        color: '#3399cc'\r\n                    },\r\n                    handler: async function (response) {\r\n                        try {\r\n                            // Handle successful payment\r\n                            console.log('Payment successful:', response);\r\n                            \r\n                            window.location.reload();\r\n                        } catch (error) {\r\n                            console.error('Error processing payment:', error);\r\n                        }\r\n                    },\r\n                    modal: {\r\n                        ondismiss: function () {\r\n                           \r\n                            console.log('Payment modal closed');\r\n                        }\r\n                    },\r\n                    webhook: {\r\n                        url: 'https://1e8b-202-8-112-195.ngrok-free.app/webhook',\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                        },\r\n                        data: {\r\n                            appointmentId: appointmentId\r\n                        }\r\n                    }\r\n                };\r\n                const rzp = new window.Razorpay(options);\r\n                rzp.open();\r\n                \r\n                \r\n               \r\n           \r\n        } catch (error) {\r\n            console.error('Error fetching doctor details:', error);\r\n            alert('An error occurred while fetching doctor details.');\r\n        }\r\n    };\r\n\r\n    const handleChat = (doctorId) => {\r\n        console.log('Chat button clicked');\r\n        navigate(`/chat/${doctorId}/${user._id}`);\r\n    };\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <h2>Your Appointments</h2>\r\n            <ul>\r\n                {appointments.map(appointment => (\r\n                    <li key={appointment._id}>\r\n                        Doctor: {appointment.doctorId.name}, Date: {appointment.date}, Time: {appointment.timeSlot}, Status: {appointment.status}\r\n                        {appointment.status === \"Approved\" && (\r\n                            <div>\r\n                                <button onClick={() => handlePayment(appointment.doctorId._id, appointment._id)}>Proceed to Payment</button>\r\n                               \r\n\r\n                            </div>\r\n                        )}\r\n                        {appointment.status === \"Paid\" && (\r\n                                    <button onClick={() => handleChat(appointment.doctorId._id)}>Start Chat</button>\r\n\r\n                            )}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Appointments;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}