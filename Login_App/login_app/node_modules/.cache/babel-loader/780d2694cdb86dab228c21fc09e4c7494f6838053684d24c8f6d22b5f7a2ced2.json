{"ast":null,"code":"import React from 'react';\nimport mongoose from \"mongoose\";\nconst doctors = new mongoose.Schema({\n  email: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  password: {\n    type: String,\n    required: true\n  },\n  name: {\n    type: String,\n    required: true\n  },\n  phone: {\n    type: Number\n  },\n  photo: {\n    type: String\n  },\n  ticketPrice: {\n    type: Number\n  },\n  role: {\n    type: String\n  },\n  // Fields for doctors only\n  specialization: {\n    type: String\n  },\n  qualifications: {\n    type: Array\n  },\n  experiences: {\n    type: Array\n  },\n  bio: {\n    type: String,\n    maxLength: 50\n  },\n  about: {\n    type: String\n  },\n  timeSlots: {\n    type: Array\n  },\n  reviews: [{\n    type: mongoose.Types.ObjectId,\n    ref: \"Review\"\n  }],\n  averageRating: {\n    type: Number,\n    default: 0\n  },\n  totalRating: {\n    type: Number,\n    default: 0\n  },\n  isApproved: {\n    type: String,\n    enum: [\"pending\", \"approved\", \"cancelled\"],\n    default: \"pending\"\n  },\n  appointments: [{\n    type: mongoose.Types.ObjectId,\n    ref: \"Appointment\"\n  }]\n});\nexport default mongoose.model(\"Doctor\", DoctorSchema);","map":{"version":3,"names":["React","mongoose","doctors","Schema","email","type","String","required","unique","password","name","phone","Number","photo","ticketPrice","role","specialization","qualifications","Array","experiences","bio","maxLength","about","timeSlots","reviews","Types","ObjectId","ref","averageRating","default","totalRating","isApproved","enum","appointments","model","DoctorSchema"],"sources":["E:/FYP/Final-Year-Project/Login_App/login_app/src/components/doctors/Doctors.js"],"sourcesContent":["import React from 'react'\r\n\r\nimport mongoose from \"mongoose\";\r\n\r\nconst doctors = new mongoose.Schema({\r\n  email: { type: String, required: true, unique: true },\r\n  password: { type: String, required: true },\r\n  name: { type: String, required: true },\r\n  phone: { type: Number },\r\n  photo: { type: String },\r\n  ticketPrice: { type: Number },\r\n  role: {\r\n    type: String,\r\n  },\r\n\r\n  // Fields for doctors only\r\n  specialization: { type: String },\r\n  qualifications: {\r\n    type: Array,\r\n  },\r\n\r\n  experiences: {\r\n    type: Array,\r\n  },\r\n\r\n  bio: { type: String, maxLength: 50 },\r\n  about: { type: String },\r\n  timeSlots: { type: Array },\r\n  reviews: [{ type: mongoose.Types.ObjectId, ref: \"Review\" }],\r\n  averageRating: {\r\n    type: Number,\r\n    default: 0,\r\n  },\r\n  totalRating: {\r\n    type: Number,\r\n    default: 0,\r\n  },\r\n  isApproved: {\r\n    type: String,\r\n    enum: [\"pending\", \"approved\", \"cancelled\"],\r\n    default: \"pending\",\r\n  },\r\n  appointments: [{ type: mongoose.Types.ObjectId, ref: \"Appointment\" }],\r\n});\r\n\r\nexport default mongoose.model(\"Doctor\", DoctorSchema);\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,QAAQ,MAAM,UAAU;AAE/B,MAAMC,OAAO,GAAG,IAAID,QAAQ,CAACE,MAAM,CAAC;EAClCC,KAAK,EAAE;IAAEC,IAAI,EAAEC,MAAM;IAAEC,QAAQ,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAK,CAAC;EACrDC,QAAQ,EAAE;IAAEJ,IAAI,EAAEC,MAAM;IAAEC,QAAQ,EAAE;EAAK,CAAC;EAC1CG,IAAI,EAAE;IAAEL,IAAI,EAAEC,MAAM;IAAEC,QAAQ,EAAE;EAAK,CAAC;EACtCI,KAAK,EAAE;IAAEN,IAAI,EAAEO;EAAO,CAAC;EACvBC,KAAK,EAAE;IAAER,IAAI,EAAEC;EAAO,CAAC;EACvBQ,WAAW,EAAE;IAAET,IAAI,EAAEO;EAAO,CAAC;EAC7BG,IAAI,EAAE;IACJV,IAAI,EAAEC;EACR,CAAC;EAED;EACAU,cAAc,EAAE;IAAEX,IAAI,EAAEC;EAAO,CAAC;EAChCW,cAAc,EAAE;IACdZ,IAAI,EAAEa;EACR,CAAC;EAEDC,WAAW,EAAE;IACXd,IAAI,EAAEa;EACR,CAAC;EAEDE,GAAG,EAAE;IAAEf,IAAI,EAAEC,MAAM;IAAEe,SAAS,EAAE;EAAG,CAAC;EACpCC,KAAK,EAAE;IAAEjB,IAAI,EAAEC;EAAO,CAAC;EACvBiB,SAAS,EAAE;IAAElB,IAAI,EAAEa;EAAM,CAAC;EAC1BM,OAAO,EAAE,CAAC;IAAEnB,IAAI,EAAEJ,QAAQ,CAACwB,KAAK,CAACC,QAAQ;IAAEC,GAAG,EAAE;EAAS,CAAC,CAAC;EAC3DC,aAAa,EAAE;IACbvB,IAAI,EAAEO,MAAM;IACZiB,OAAO,EAAE;EACX,CAAC;EACDC,WAAW,EAAE;IACXzB,IAAI,EAAEO,MAAM;IACZiB,OAAO,EAAE;EACX,CAAC;EACDE,UAAU,EAAE;IACV1B,IAAI,EAAEC,MAAM;IACZ0B,IAAI,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,WAAW,CAAC;IAC1CH,OAAO,EAAE;EACX,CAAC;EACDI,YAAY,EAAE,CAAC;IAAE5B,IAAI,EAAEJ,QAAQ,CAACwB,KAAK,CAACC,QAAQ;IAAEC,GAAG,EAAE;EAAc,CAAC;AACtE,CAAC,CAAC;AAEF,eAAe1B,QAAQ,CAACiC,KAAK,CAAC,QAAQ,EAAEC,YAAY,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}